name: Empresas
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/empresas
    metadata:
      groupName: Empresas
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Listar todas las empresas

        Retorna una lista completa de empresas junto con sus representantes.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "data": [
               {
                  "id": 1,
                  "nombre": "Constructora XYZ",
                  "nit": "900123456-7",
                  "direccion": "Calle 123 #45-67",
                  "telefono": "3001234567",
                  "email": "contacto@xyz.com",
                  "created_at": "2025-10-06T15:00:00Z",
                  "updated_at": "2025-10-06T15:00:00Z"
               }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/empresas
    metadata:
      groupName: Empresas
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Crear una nueva empresa

        Crea una empresa con la información proporcionada.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre de la empresa.'
        required: true
        example: 'Constructora XYZ'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      nit:
        name: nit
        description: 'Número de identificación tributaria único.'
        required: true
        example: 900123456-7
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      direccion:
        name: direccion
        description: 'Dirección principal.'
        required: true
        example: 'Calle 123 #45-67'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'Teléfono de contacto.'
        required: true
        example: '3001234567'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico.'
        required: true
        example: contacto@xyz.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: 'Constructora XYZ'
      nit: 900123456-7
      direccion: 'Calle 123 #45-67'
      telefono: '3001234567'
      email: contacto@xyz.com
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": true,
            "message": "Empresa creada exitosamente",
            "data": {
                "id": 1,
                "nombre": "Constructora XYZ",
                "nit": "900123456-7",
                "direccion": "Calle 123 #45-67",
                "telefono": "3001234567",
                "email": "contacto@xyz.com"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": false,
            "message": "Error de validación",
            "errors": {
                "email": ["El campo email ya está en uso."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/empresas/{id}'
    metadata:
      groupName: Empresas
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Obtener una empresa por ID

        Devuelve los datos de una empresa específica, junto con sus representantes y solicitudes.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la empresa.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "data": {
                "id": 1,
                "nombre": "Constructora XYZ",
                "nit": "900123456-7",
                "direccion": "Calle 123 #45-67",
                "telefono": "3001234567",
                "email": "contacto@xyz.com"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "message": "Empresa no encontrada"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/empresas/{id}'
    metadata:
      groupName: Empresas
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Actualizar una empresa existente

        Permite actualizar los datos de una empresa ya registrada.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la empresa.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre de la empresa.'
        required: false
        example: 'Constructora ABC'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      nit:
        name: nit
        description: 'Número tributario.'
        required: false
        example: 900987654-3
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      direccion:
        name: direccion
        description: Dirección.
        required: false
        example: 'Carrera 10 #20-30'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: Teléfono.
        required: false
        example: '3016549870'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico.'
        required: false
        example: info@abc.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: 'Constructora ABC'
      nit: 900987654-3
      direccion: 'Carrera 10 #20-30'
      telefono: '3016549870'
      email: info@abc.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Empresa actualizada exitosamente",
            "data": {
                "id": 1,
                "nombre": "Constructora ABC",
                "nit": "900987654-3"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "message": "Empresa no encontrada"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/empresas/{id}'
    metadata:
      groupName: Empresas
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Eliminar una empresa

        Elimina una empresa registrada del sistema.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la empresa.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Empresa eliminada exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "message": "Empresa no encontrada"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
