name: 'Tipos de Maquinaria'
description: 'Este endpoint devuelve la lista completa de tipos de maquinaria registrados, junto con su categoría y mantenimientos relacionados.'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tipos_maquinaria
    metadata:
      groupName: 'Tipos de Maquinaria'
      groupDescription: 'Este endpoint devuelve la lista completa de tipos de maquinaria registrados, junto con su categoría y mantenimientos relacionados.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar todos los tipos de maquinaria.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "data": [
              {
                "id": 1,
                "nombre": "Excavadora",
                "descripcion": "Maquinaria usada para excavación",
                "categoria": {"id": 1, "nombre": "Pesada"},
                "mantenimientos": []
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tipos_maquinaria
    metadata:
      groupName: 'Tipos de Maquinaria'
      groupDescription: 'Crea un nuevo tipo de maquinaria dentro de una categoría existente.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear un nuevo tipo de maquinaria.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del tipo de maquinaria. Ejemplo: Excavadora.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      descripcion:
        name: descripcion
        description: 'Descripción opcional. Ejemplo: Maquinaria pesada usada para excavación.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      categoria_id:
        name: categoria_id
        description: 'ID de la categoría a la que pertenece. Ejemplo: 1.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: consequatur
      descripcion: consequatur
      categoria_id: 17
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": true,
            "message": "Tipo de maquinaria creado exitosamente",
            "data": {
              "id": 5,
              "nombre": "Excavadora",
              "descripcion": "Maquinaria pesada usada para excavación",
              "categoria_id": 1
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": false,
            "message": "Error de validación",
            "errors": {
              "nombre": ["El campo nombre es obligatorio."],
              "categoria_id": ["El campo categoria_id es obligatorio."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tipos_maquinaria/{id}'
    metadata:
      groupName: 'Tipos de Maquinaria'
      groupDescription: 'Muestra los detalles de un tipo de maquinaria específico.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener un tipo de maquinaria por ID.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del tipo de maquinaria. Ejemplo: 1.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "data": {
              "id": 1,
              "nombre": "Excavadora",
              "descripcion": "Equipo de excavación",
              "categoria": {"id": 1, "nombre": "Pesada"},
              "mantenimientos": []
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "message": "Tipo de maquinaria no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tipos_maquinaria/{id}'
    metadata:
      groupName: 'Tipos de Maquinaria'
      groupDescription: 'Permite modificar la información de un tipo de maquinaria existente.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar un tipo de maquinaria.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del tipo de maquinaria a actualizar. Ejemplo: 2.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del tipo de maquinaria. Ejemplo: Retroexcavadora.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      descripcion:
        name: descripcion
        description: 'Descripción del tipo de maquinaria. Ejemplo: Equipo para remover tierra.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      categoria_id:
        name: categoria_id
        description: 'ID de la categoría. Ejemplo: 2.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: consequatur
      descripcion: consequatur
      categoria_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Tipo de maquinaria actualizado exitosamente",
            "data": {
              "id": 2,
              "nombre": "Retroexcavadora",
              "descripcion": "Equipo para remover tierra",
              "categoria_id": 2
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "message": "Tipo de maquinaria no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tipos_maquinaria/{id}'
    metadata:
      groupName: 'Tipos de Maquinaria'
      groupDescription: 'Elimina un tipo de maquinaria específico del sistema.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar un tipo de maquinaria.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del tipo de maquinaria a eliminar. Ejemplo: 3.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Tipo de maquinaria eliminado exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "message": "Tipo de maquinaria no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
