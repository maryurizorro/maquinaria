## Autogenerated by Scribe. DO NOT MODIFY.

name: Empleados
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/empleados
    metadata:
      groupName: Empleados
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar empleados'
      description: 'Devuelve la lista completa de empleados junto con sus solicitudes asociadas.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "data": [
               {
                   "id": 1,
                   "nombre": "Juan",
                   "apellido": "Pérez",
                   "documento": "12345678",
                   "email": "juan.perez@example.com",
                   "direccion": "Calle 10 #23-45",
                   "telefono": "3104567890",
                   "rol": "empleado",
                   "solicitudes": []
               }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/empleados
    metadata:
      groupName: Empleados
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear un nuevo empleado'
      description: 'Crea un nuevo registro de empleado con todos sus datos básicos.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del empleado.'
        required: true
        example: Juan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellido:
        name: apellido
        description: 'Apellido del empleado.'
        required: true
        example: Pérez
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      documento:
        name: documento
        description: 'Documento único del empleado.'
        required: true
        example: '12345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico único del empleado.'
        required: true
        example: juan.perez@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      direccion:
        name: direccion
        description: 'Dirección del empleado.'
        required: true
        example: 'Calle 10 #23-45'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'Teléfono del empleado.'
        required: true
        example: '3104567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      rol:
        name: rol
        description: 'Rol del empleado (admin, empleado, supervisor).'
        required: false
        example: empleado
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: Juan
      apellido: Pérez
      documento: '12345678'
      email: juan.perez@example.com
      direccion: 'Calle 10 #23-45'
      telefono: '3104567890'
      rol: empleado
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "status": true,
           "message": "Empleado creado exitosamente",
           "data": {
               "id": 5,
               "nombre": "Juan",
               "apellido": "Pérez",
               "documento": "12345678",
               "email": "juan.perez@example.com",
               "direccion": "Calle 10 #23-45",
               "telefono": "3104567890",
               "rol": "empleado"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "status": false,
           "message": "Error de validación",
           "errors": {
               "email": ["El campo email ya ha sido registrado."]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/empleados/{id}'
    metadata:
      groupName: Empleados
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostrar un empleado'
      description: 'Obtiene la información de un empleado por su ID junto con sus solicitudes.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del empleado.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "data": {
               "id": 2,
               "nombre": "Ana",
               "apellido": "Gómez",
               "documento": "98765432",
               "email": "ana.gomez@example.com",
               "direccion": "Carrera 15 #45-12",
               "telefono": "3204567890",
               "rol": "supervisor",
               "solicitudes": []
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": false,
           "message": "Empleado no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/empleados/{id}'
    metadata:
      groupName: Empleados
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar un empleado'
      description: 'Modifica la información de un empleado existente.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del empleado.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del empleado.'
        required: false
        example: Carlos
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellido:
        name: apellido
        description: 'Apellido del empleado.'
        required: false
        example: Ramírez
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      documento:
        name: documento
        description: 'Documento del empleado.'
        required: false
        example: '11223344'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico.'
        required: false
        example: carlos.ramirez@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      direccion:
        name: direccion
        description: Dirección.
        required: false
        example: 'Calle 45 #23-10'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: Teléfono.
        required: false
        example: '3115678901'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      rol:
        name: rol
        description: 'Rol (admin, empleado, supervisor).'
        required: false
        example: supervisor
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: Carlos
      apellido: Ramírez
      documento: '11223344'
      email: carlos.ramirez@example.com
      direccion: 'Calle 45 #23-10'
      telefono: '3115678901'
      rol: supervisor
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Empleado actualizado exitosamente",
           "data": {
               "id": 3,
               "nombre": "Carlos",
               "apellido": "Ramírez",
               "email": "carlos.ramirez@example.com"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": false,
           "message": "Empleado no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/empleados/{id}'
    metadata:
      groupName: Empleados
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar un empleado'
      description: 'Elimina un registro de empleado del sistema.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del empleado.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Empleado eliminado exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": false,
           "message": "Empleado no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
