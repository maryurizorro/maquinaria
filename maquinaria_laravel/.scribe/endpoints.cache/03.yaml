## Autogenerated by Scribe. DO NOT MODIFY.

name: Representantes
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/representantes
    metadata:
      groupName: Representantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Listar todos los representantes

        Devuelve una lista con todos los representantes y la información de su empresa asociada.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "data": [
               {
                   "id": 1,
                   "nombre": "Juan",
                   "apellido": "Pérez",
                   "documento": "12345678",
                   "telefono": "3001234567",
                   "email": "juan@example.com",
                   "empresa_id": 1,
                   "empresa": {
                       "id": 1,
                       "nombre": "Empresa ABC"
                   }
               }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/representantes
    metadata:
      groupName: Representantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Crear un nuevo representante

        Registra un nuevo representante y lo asocia a una empresa existente.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del representante.'
        required: true
        example: Juan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellido:
        name: apellido
        description: 'Apellido del representante.'
        required: true
        example: Pérez
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      documento:
        name: documento
        description: 'Documento único del representante.'
        required: true
        example: '12345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'Teléfono de contacto.'
        required: true
        example: '3001234567'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico único.'
        required: true
        example: juan@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      empresa_id:
        name: empresa_id
        description: 'ID de la empresa asociada.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: Juan
      apellido: Pérez
      documento: '12345678'
      telefono: '3001234567'
      email: juan@example.com
      empresa_id: 1
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "status": true,
           "message": "Representante creado exitosamente",
           "data": {
               "id": 1,
               "nombre": "Juan",
               "apellido": "Pérez",
               "documento": "12345678",
               "telefono": "3001234567",
               "email": "juan@example.com",
               "empresa": {
                   "id": 1,
                   "nombre": "Empresa ABC"
               }
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "status": false,
           "message": "Error de validación",
           "errors": {
               "email": ["El campo email ya ha sido registrado."]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/representantes/{id}'
    metadata:
      groupName: Representantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Mostrar un representante por ID

        Retorna los detalles de un representante y su empresa asociada.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del representante.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "data": {
               "id": 1,
               "nombre": "Juan",
               "apellido": "Pérez",
               "documento": "12345678",
               "telefono": "3001234567",
               "email": "juan@example.com",
               "empresa": {
                   "id": 1,
                   "nombre": "Empresa ABC"
               }
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": false,
           "message": "Representante no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/representantes/{id}'
    metadata:
      groupName: Representantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Actualizar un representante existente

        Permite modificar los datos de un representante existente.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del representante a actualizar.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del representante.'
        required: false
        example: Carlos
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellido:
        name: apellido
        description: 'Apellido del representante.'
        required: false
        example: Ramírez
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      documento:
        name: documento
        description: 'Documento del representante.'
        required: false
        example: '98765432'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'Teléfono de contacto.'
        required: false
        example: '3209876543'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico.'
        required: false
        example: carlos@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      empresa_id:
        name: empresa_id
        description: 'ID de la empresa asociada.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: Carlos
      apellido: Ramírez
      documento: '98765432'
      telefono: '3209876543'
      email: carlos@example.com
      empresa_id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Representante actualizado exitosamente",
           "data": {
               "id": 1,
               "nombre": "Carlos",
               "apellido": "Ramírez",
               "email": "carlos@example.com",
               "empresa": {
                   "id": 2,
                   "nombre": "Empresa XYZ"
               }
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": false,
           "message": "Representante no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/representantes/{id}'
    metadata:
      groupName: Representantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Eliminar un representante

        Elimina un representante existente según su ID.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del representante a eliminar.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Representante eliminado exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": false,
           "message": "Representante no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
